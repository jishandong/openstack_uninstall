#!/bin/sh
# Icehouse
#============
# Definitions
#============
PATH_DIR=$(dirname $(readlink -f $0))
FILE_DIR="${PATH_DIR}/../config/allinone"
MODE=$1
ROLE="allinone"
HOSTNAME=`hostname -f`
# source
. ${PATH_DIR}/../script/unsetup_functions
. ${PATH_DIR}/../../msg/UNINSTALLMSG

#--------------
# setting files
#--------------
FILE_CONF=${FILE_DIR}/file.conf
USER_CONF=${FILE_DIR}/user.conf
GROUP_CONF=${FILE_DIR}/group.conf
SERVICE_PORT_CONF=${FILE_DIR}/service_port.conf
SERVICE_CONF=${FILE_DIR}/service.conf
RPM_CONF=${FILE_DIR}/rpm.conf

#==========
# Functions
#==========

#-------------
# check wheather config files exist
#-------------
check_config_file()
{
    write_log "===Start checking config files exist==="
    for file in $FILE_CONF $USER_CONF $GROUP_CONF $SERVICE_PORT_CONF $RPM_CONF $SERVICE_CONF
    do
        if [ ! -f $file ];then
            common_log "${MODE}" "${FILE_NOT_EXIST}"${file}
            failure_operation "${ROLE}" "${HOSTNAME}" 2 "${MODE}"
        fi
    done
}

#-------------
# Main process
#-------------
[ "${MODE}" = "interactive" ] && { user_confirm_master; }
init_log "${ROLE}"
write_log "Start Uninstallation of All-in-One Uninstallation"
#echo display uninstall start
[ "${MODE}" = "interactive" ] && { display_start_uninstall "${ROLE}" "${HOSTNAME}"; }

NODE_RET=0

#check whether openstack has been installed
check_openstack_master "${MODE}"

#Check whether config files exist
check_config_file

#UnSetup repository
#unsetup_repository_master "${ROLE}" ${PATH_DIR}
#RET=$?
#[ $RET -ne 0 ] && [ NODE_RET=1 ]

#Remove RPM
remove_rpm_master $RPM_CONF "${MODE}"
RET=$?
[ $RET -ne 0 ] && { NODE_RET=1; }

#Remove service
unset_service_master $SERVICE_CONF "${MODE}"
RET=$?
[ $RET -ne 0 ] && { NODE_RET=1; }

#Remove user
unset_user_master $USER_CONF "${MODE}"
RET=$?
[ $RET -ne 0 ] && { NODE_RET=1; }

#Remove group
unset_group_master $GROUP_CONF "${MODE}"
RET=$?
[ $RET -ne 0 ] && { NODE_RET=1; }

# manually do this step by user because of its dangerous
#echo "Recover network device file"
#recover_network_device_file_master $NETWORK_DEVICE_BACK $NETWORK_DEVICE "${MODE}"

#Remove network service port
unset_network_service_port_master $SERVICE_PORT_CONF "${MODE}"
RET=$?
[ $RET -ne 0 ] && { NODE_RET=1; }

# manually do this step by user because of its dangerous
#echo "Unset kernel parameter"
#unset_kernel_setting_master $BACKUP_DIR $SYSCTL_FILE "${MODE}"

#Remove the unnecessary file
remove_specific_file_master $FILE_CONF
RET=$?
[ $RET -ne 0 ] && { NODE_RET=1; }

if [ $NODE_RET -eq 0 ]; then
    success_operation "${ROLE}" "${HOSTNAME}" 0 "${MODE}"
else
    failure_operation "${ROLE}" "${HOSTNAME}" 1 "${MODE}"
fi
